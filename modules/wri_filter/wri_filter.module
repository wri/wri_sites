<?php

/**
 * @file
 * WRI filter module hooks.
 */

use Drupal\views\ViewExecutable;

/**
 * Implements hook_page_attachments().
 */
function wri_filter_page_attachments(array &$attachments) {
  $wri_filter_service = Drupal::service('wri_filter.filter');
  // Add filter cookie name to js settings.
  $attachments['#attached']['drupalSettings']['wri_filter']['filterCookieName'] = $wri_filter_service->getFilterCookieName();
  // Add all filters array to js settings.
  $attachments['#attached']['drupalSettings']['wri_filter']['allFilters'] = $wri_filter_service->getAllFilters();
  $attachments['#attached']['drupalSettings']['wri_filter']['pageIsFilterable'] = $wri_filter_service->pageIsFilterable();
  $attachments['#attached']['drupalSettings']['wri_filter']['currentFilterName'] = $wri_filter_service->getCurrentFilter();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function wri_filter_preprocess_html(&$variables) {
  if (\Drupal::service('wri_filter.filter')->getCurrentFilter()) {
    $variables['attributes']['class'][] = 'sitewide-filter-applied';
  }

  // Add a filterable-page class when the page can be filtered.
  if (\Drupal::service('wri_filter.filter')->pageIsFilterable()) {
    $variables['attributes']['class'][] = 'filterable-page';
  }
}

/**
 * Implements hook_views_pre_build().
 */
function wri_filter_views_pre_build(ViewExecutable $view) {
  // Modify the appropriate view arguments to prevent filtering.
  if (!\Drupal::service('wri_filter.filter')->pageIsFilterable()) {
    switch ($view->id()) {
      case 'content_listing':
      case '3_1':
      case 'superfeatured_content':
        array_pop($view->argument);
        break;
    }
  }
}
