<?php

/**
 * @file
 * Wri_event.
 */

use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_views_query_alter().
 */
function wri_event_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // On the Events view, if the "date" is set to "Show past Events" (value = 2)
  // change the date sort to DESC (so older events are at the bottom).
  if ($view->id() == 'events' && is_numeric($view->exposed_raw_input['date']) && $view->exposed_raw_input['date'] == 2) {
    $sort = &$query->getSort();
    $sort['field_date_time'] = 'DESC';
  }
}

/**
 * Implements hook_entity_base_field_info().
 */
function wri_event_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() === 'node') {
    // Add a field that shows the parent of the term, or itself if no parent.
    $fields['addtocal'] = BaseFieldDefinition::create('addtocal')
      ->setName('addtocal')
      ->setLabel(t('Calendar item'))
      ->setSetting('target_type', 'node')
      ->setComputed(TRUE)
      ->setClass('\Drupal\wri_search\WriCalculatedTexts')
      ->setDisplayConfigurable('view', TRUE)
      ->setCardinality(1);

    return $fields;
  }
}

